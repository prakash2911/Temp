#!/bin/bash

HOST=$1
PORT=${2:-443}
JKS_TRUSTSTORE=$3
PW_FILE=$4

if [ -z "$HOST" ] || [ -z "$JKS_TRUSTSTORE" ] || [ -z "$PW_FILE" ]; then
  echo "Usage: $0 <host> [port] <truststore.jks> <password_file.pw>"
  exit 1
fi

PASSWORD=$(<"$PW_FILE")
WORKDIR=$(mktemp -d)
SERVER_CHAIN="$WORKDIR/server_chain.pem"
PEM_TRUSTSTORE="$WORKDIR/truststore.pem"

# Get server cert chain
echo "[+] Extracting certificate chain from $HOST:$PORT..."
openssl s_client -connect "$HOST:$PORT" -showcerts </dev/null 2>/dev/null \
  | awk '/-----BEGIN CERTIFICATE-----/,/-----END CERTIFICATE-----/' > "$SERVER_CHAIN"

# Split and print server certs
csplit -s -z "$SERVER_CHAIN" '/-----BEGIN CERTIFICATE-----/' '{*}' > /dev/null
echo
COUNT=0
for f in "$WORKDIR"/xx*; do
  ((COUNT++))
  echo "[Server Chain #$COUNT]"
  openssl x509 -in "$f" -noout -subject -issuer
done

# Convert truststore to PEM
echo
echo "[+] Converting JKS truststore to PEM..."
keytool -importkeystore \
  -srckeystore "$JKS_TRUSTSTORE" -srcstorepass "$PASSWORD" \
  -destkeystore "$WORKDIR/ts.p12" -deststoretype PKCS12 -deststorepass "$PASSWORD" >/dev/null 2>&1

openssl pkcs12 -in "$WORKDIR/ts.p12" -nokeys -out "$PEM_TRUSTSTORE" -passin pass:"$PASSWORD" >/dev/null 2>&1

echo "[+] Verifying server chain against your truststore..."
VERIFY_OUTPUT=$(openssl verify -CAfile "$PEM_TRUSTSTORE" "$SERVER_CHAIN" 2>&1)

if echo "$VERIFY_OUTPUT" | grep -q "OK"; then
  echo "✅ Server certificate chain is valid and trusted."
else
  echo "❌ Server certificate is NOT trusted."
  echo "Reason:"
  echo "$VERIFY_OUTPUT"
  
  echo
  echo "[+] Attempting to diagnose..."
  SERVER_ROOT_CERT="$WORKDIR/xx$(printf "%02d" $((COUNT-1)))"
  ROOT_MATCH=$(openssl x509 -in "$SERVER_ROOT_CERT" -noout -subject -issuer -fingerprint)
  
  MATCH_FOUND=0
  while read -r line; do
    echo "$ROOT_MATCH" | grep -q "$line" && MATCH_FOUND=1 && break
  done < <(openssl crl2pkcs7 -nocrl -certfile "$PEM_TRUSTSTORE" | openssl pkcs7 -print_certs -noout | grep "Subject:")

  if [ $MATCH_FOUND -eq 0 ]; then
    echo "❌ Root CA not found in truststore (CA7 mismatch or missing)."
  else
    echo "✅ Root CA is present."
    echo "❌ Likely cause: Intermediate CA mismatch (e.g., CA8 vs CA9)."
  fi
fi

rm -rf "$WORKDIR"